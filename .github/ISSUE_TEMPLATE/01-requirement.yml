name: Requirement
type: Requirement
description: Submit a new requirement.
title: "Short objective of the requirement (do NOT add prefixes such as 'System | CODE' | ...)"
projects: ["tce-dip/2"]
body:

  - type: input
    id: actor
    attributes:
      label: Actor
      description: "The external person, system, or trigger that provides input or receives the output of this requirement."
      placeholder: "examples: KAM Manager | Financial Controller | System Notification | ServiceBus Message"
    validations:
      required: true

  - type: markdown
    attributes:
      value: |
        > [!TIP]
        > The actor specifies a role played by a _user_ or any other _system_ that interacts with the objective of this requirement.
        > Actors are _external_ to the requirement, but interact with it directly by _providing input_ to it, and/or _receive outputs_ from it.
        > An actor is not necessarily a physical entity, for example, it may be a _trigger_ or another type of _event_.

  - type: input
    id: objective
    attributes:
      label: Objective
      description: "The overall objective of this requirement in a single sentence."
      placeholder: "example: The first tab in the report must display a chart that depicts spending by category."
    validations:
      required: true

  - type: markdown
    attributes:
      value: |
        > [!TIP]
        > The objective is a _single_, _complete_ and _unambiguous_ sentence that describes the desired _end-state_ of this requirement.
        > It includes a subject and a predicate with an object. Keep the following in mind when composing the objective:
        >     - Is it a complete and unambiguous sentence?
        >     - Is it not in conflict with any other requirements?
        >     - Is it an atomic (single unit) of work?
        >     - Is it feasible within a single iteration?
        >     - Is it verifyable (can it be tested)?
        >     - It it valuable?
        
  - type: textarea
    id: context
    attributes:
      label: Context
      description: Provide an optional **context** and list any **preconditions** relevant to the implementation of this requirement.

  - type: markdown
    attributes:
      value: |
        > [!TIP]
        > The context of the requirement provides background information:
        >     - Why is the requirement important or which particular need has resulted in this requirement,
        >     - list any distinct _preconditions_, that is, the state that must exist before this requirement is triggered.
        
  - type: textarea
    id: requirements-functional
    attributes:
      label: Functional Requirements
      description: List the _functional_ requirements and their **MoSCoW** classification.
      placeholder: |
        - [ ] List any functional prerequisites, for example using a link to another requirement.
        - [ ] List the functional requirements that <i>must, should, could, or would</i> be implemented.
    validations:
      required: true

  - type: markdown
    attributes:
      value: |
        > [!TIP]
        > The functional requirements (FR's) comprise everything that is expected for this requirement to _function_ properly:
        >     - List the _exact_ and _detailed_ expectations of the functional implementation of this requirement.
        >     - All functional requirements must be _verifyable_ (can it be tested or confirmed?).
        >     - Use the MoSCow classification to indicate priority, provide focus, or allow some interpretation.
        >     - Anything not listed here is _not_ considered part of this requirement and _should_ not be implemented. 

  - type: textarea
    id: requirements-non-functional
    attributes:
      label: Non-Functional Requirements
      description: List the _non-functional_ requirements and their **MoSCoW** classification.
      value: |
        - [ ] ...
        - [ ] The README file and other (code-) documentation sources _must_ be updated.
        - [ ] All (unit-) tests _must_ pass and failures _should_ be documented as defects or requirements.
        - [ ] All related [Pull Requests](../pulls) _must_ be reviewed, approved, and merged.
        - [ ] The (production-) deployment _should_ be scheduled.
    validations:
      required: true

  - type: markdown
    attributes:
      value: |
        > [!TIP]
        > The non-functional requirements (NFR's) comprise all expectations which do _not_ contribute to this requirement _functioning_ properly:
        >     - List the _exact_ and _detailed_ expectations of the non-functional implementation of this requirement.
        >     - Most non-functional requirements are _verifyable_ (can it be tested or confirmed?), but may not be.
        >     - Use the MoSCow classification to indicate priority, provide focus, or allow some interpretation.
        >     - This list is complemented by processes (Change and Release), standards (Coding Standards), and procedures (ISO).

  - type: markdown
    attributes:
      value: |
        
        For more information about the process, see the [documentation](https://fuzzy-goggles-j8o2698.pages.github.io/documentation/development/development-process.html).
        _(Note that this link opens in this window so you may lose your changes!)_
